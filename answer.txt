@a = dso_local global i32 1
declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
define i32 @func(){
;<label>:0:
    store i32 2, i32* @a
    ret i32 1
}

define i32 @func2(){
;<label>:0:
    store i32 4, i32* @a
    ret i32 10
}

define i32 @func3(){
;<label>:0:
    store i32 3, i32* @a
    ret i32 0
}

define i32 @main(){
;<label>:0:
    %1 = icmp ne i32 0, 0
    br i1 %1, label %11, label %2
;<label>:2:
    %3 = call i32 @func()
    %4 = icmp ne i32 %3, 0
    br i1 %4, label %5, label %8
;<label>:5:
    %6 = call i32 @func3()
    %7 = icmp ne i32 %6, 0
    br i1 %7, label %11, label %8
;<label>:8:
    %9 = call i32 @func2()
    %10 = icmp ne i32 %9, 0
    br i1 %10, label %11, label %13
;<label>:11:
    %12 = load i32, i32* @a
    call void @putint(i32 %12)
    call void @putch(i32 45)
    call void @putch(i32 45)
    call void @putch(i32 49)
    br label %13
;<label>:13:
    %14 = icmp ne i32 1, 0
    br i1 %14, label %18, label %15
;<label>:15:
    %16 = call i32 @func3()
    %17 = icmp ne i32 %16, 0
    br i1 %17, label %18, label %20
;<label>:18:
    %19 = load i32, i32* @a
    call void @putint(i32 %19)
    call void @putch(i32 45)
    call void @putch(i32 45)
    call void @putch(i32 50)
    br label %20
;<label>:20:
    %21 = icmp ne i32 0, 0
    br i1 %21, label %29, label %22
;<label>:22:
    %23 = call i32 @func3()
    %24 = icmp ne i32 %23, 0
    br i1 %24, label %29, label %25
;<label>:25:
    %26 = call i32 @func()
    %27 = call i32 @func2()
    %28 = icmp slt i32 %26, %27
    br i1 %28, label %29, label %31
;<label>:29:
    %30 = load i32, i32* @a
    call void @putint(i32 %30)
    call void @putch(i32 45)
    call void @putch(i32 45)
    call void @putch(i32 51)
    br label %31
;<label>:31:
    ret i32 0
}

