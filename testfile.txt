
// ConstDecl  ConstDef
const int cyx = 20, das = -3123, arr[3] = {1, 2, 3}, arr2[2][2] = {{1, 2}, {3, 4}};
const int dasda = 1;
// VarDecl VarDef
int crsb = 0,  zxc, crsb1[3] = {1, 2, 3}, crsb2[2][2] = {{1, 2}, {3, 4}}, crsb3[3], crsb4[2][2];
// FuncDef
void func()
{
    printf("20374236\n");
    return;
}
int test()
{
    return 1;
}
int func1(int num, int arr1[], int arr2[][2])
{
    num = 3;
    int ad;
    {
        int temp = 3;
        printf("%d\n", temp);
    }
    return num + arr1[0];
}
void func2(int num)
{
    int temp = 3;
    if ((temp + 3))
    {
    }
    if (temp == num)
    {
    }
    if (temp != num)
    {
    }
    if (temp > num)
    {
    }
    if (temp < num)
    {
    }
    if (temp >= num)
    {
    }
    if (temp <= num)
    {
    }
    temp = temp * 3 + num;
    temp = temp * 2 / 4 - num;
    temp = temp % 2;
    temp = (3 + 3) * (4 - 3);
    if (!temp)
    {
    }
    else
    {
        int ndas = 32;
        {
        }
    }
    temp = 0;
    if (!temp)
    {
    }
    else
    {
    }
    int temp1 = 1, temp2 = 2;
    if (temp1 == 1 || temp2 == 2)
    {
        if (temp1 == 1 && temp2 == 2)
        {
        }
    }
    if (0 && test())
    {
        ;
    }
    if (1 || test())
    {
    }

    return;
}
void func3(int arr[], int length)
{
    int i;
    int sum = 0;
    for (i = 0; i < length; i=i+1)
    {
        sum = sum + 1;
    }
    for (; i < length; i=i+1)
    {
        sum = sum + 1;
    }
    for (i = 0;; i=i+1)
    {
        sum = sum + 1;
        break;
    }
    for (i = 0; i < length;)
    {
        sum = sum + 1;
        i=i+1;
        continue;
    }
    for (;; i=i+1)
    {
        sum = sum + 1;
        break;
    }
    for (; i < length;)
    {
        sum = sum + 1;
        break;
    }
    for (i = 0;;)
    {
        sum = sum + 1;
        break;
    }
    for (;;)
    {
        sum = sum + 1;
        break;
    }
    for (i = 0; i < length; i=i+1)
    {
        if (sum > 1)
        {
            continue;
        }
        sum = sum + 1;
    }
    return;
}
int func4(int num1, int num2)
{
    {
        num1 = 1;
        {
            num2 = 2;
            {
                num2 = 3;
            }
        }
    }
    int num = 123, das = -312, cyx1[3] = {1, 2, 3}, cyx2[2][2] = {{1, 2}, {1, 2}}, zx, cxz[2], cxy[2][2];
    num;
    ;
    return num * 123 + cyx1[2];
}
int func5()
{
    int temp;
    temp = arr[3 + 2 - 4];
    temp = 3 + (3 + 3);
    temp = 3 + temp;
    temp = 3 + arr[0];
    temp = arr2[0][1] * arr2[0][0] / 2 + 3 - 1 + func4(1, 2);
    return 0;
}
int func6(int arr[], int arr2[])
{
    return 3 - 1;
}
int main()
{
    func();
    int mynum, num, arr1[3] = {1, 2, 3}, arr2[2][2] = {{1, 2}, {3, 4}}, das = -123 + (+12);
    const int a = 1, a1[3] = {1, 2, arr1[2]}, a2[2][2] = {{1, 2}, {1, 2}};
    num = arr1[2];
    mynum = getint();

    func1(num + num - num, arr2[1], arr2);
    func2(10);
    func3(arr1, 3);
    func3(arr1 + 1, 2);
    mynum = func4(1, 2);
    mynum = func5(arr1, arr1 + 1);

    return 0;
}